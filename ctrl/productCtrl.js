// Generated by CoffeeScript 1.8.0
(function() {
  var ProductCtrl, config, request;

  request = require("request");

  config = require("./../config/config.json");

  ProductCtrl = (function() {
    function ProductCtrl() {}

    ProductCtrl.productList = function(type, page, max, startDate, order, recommendedOnly, fn) {
      var url;
      if (page == null) {
        page = 1;
      }
      if (max == null) {
        max = 10;
      }
      if (order == null) {
        order = "startDate";
      }
      if (recommendedOnly == null) {
        recommendedOnly = false;
      }
      url = "" + config.inf.host + ":" + config.inf.port + "/product/getlist?" + (type != null ? "type=" + type : void 0) + "&page=" + page + "&max=" + max + "&startDate=" + startDate + "&order=" + order + "&recommendedOnly=" + recommendedOnly;
      return request({
        url: url,
        timeout: 3000
      }, function(err, response, body) {
        var res;
        if (err) {
          return fn(err);
        } else {
          res = body != null ? JSON.parse(body) : {};
          if (res.error != null) {
            return fn(new Error(res.error));
          } else {
            return fn(null, res);
          }
        }
      });
    };

    ProductCtrl.productDetail = function(pid, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/product/getdetail?productId=" + pid;
      return request({
        url: url,
        timeout: 3000
      }, function(err, response, body) {
        var res;
        if (err) {
          return fn(err);
        } else {
          res = body != null ? JSON.parse(body) : {};
          if (res.error != null) {
            return fn(new Error(res.error));
          } else {
            return fn(null, res);
          }
        }
      });
    };

    ProductCtrl.productFee = function(pid, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/product/getfees?productId=" + pid;
      return request({
        url: url,
        timeout: 3000
      }, function(err, response, body) {
        var res;
        if (err) {
          return fn(err);
        } else {
          res = body != null ? JSON.parse(body) : {};
          if (res.error != null) {
            return fn(new Error(res.error));
          } else {
            return fn(null, res);
          }
        }
      });
    };

    return ProductCtrl;

  })();

  module.exports = ProductCtrl;

}).call(this);
